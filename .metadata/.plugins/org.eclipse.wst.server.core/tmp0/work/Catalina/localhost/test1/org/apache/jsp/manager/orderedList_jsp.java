/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-22 14:41:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import libbean.BuyDataBean;
import libbean.BuyDBBean;
import java.util.List;
import java.text.NumberFormat;

public final class orderedList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("libbean.BuyDataBean");
    _jspx_imports_classes.add("libbean.BuyDBBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  String buyer = (String)session.getAttribute("id");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"../sourceboot/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<title>주문관리</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n");
      out.write("  \t\t<a class=\"navbar-brand\" href=\"#\">주문관리</a>\r\n");
      out.write("    \t\t<div class=\"text-right\" align=\"right\">\r\n");
      out.write("\t\t    \t<form method=\"post\" action=\"managerMain.jsp\"> \r\n");
      out.write("\t\t   \t    \t<input type=\"submit\" value=\"뒤로 가기\" class=\"btn btn-dark\">\t\r\n");
      out.write("\t\t    \t</form>\t\r\n");
      out.write("\t\t    \r\n");
      out.write("\t   \t    </div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("<br><br><br><br><Br>\r\n");
      out.write("\r\n");
      out.write("\r\n");

List<BuyDataBean> buyLists = null;
BuyDataBean buyList = null; 
int count = 0;

BuyDBBean buyProcess = BuyDBBean.getInstance();
count = buyProcess.getListCount();

if(count == 0){

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <table class=\"table table-hover\"> \r\n");
      out.write("     <tr height=\"30\" class=\"table-warning\"> \r\n");
      out.write("   \t\t  <td>구매목록이 없습니다.</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("  </table>\r\n");
      out.write(" \r\n");

}else{
   buyLists = buyProcess.getBuyList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("  <table class=\"table table-hover\"> \r\n");
      out.write("     <tr height=\"30\" class=\"table-info\"> \r\n");
      out.write("      <td align=\"center\"  width=\"20\">No</td> \r\n");
      out.write("      <td align=\"center\"  width=\"20\">주문자</td> \r\n");
      out.write("      <td align=\"center\"  width=\"130\">제품명</td>\r\n");
      out.write("      <td align=\"center\"  width=\"50\">가격</td> \r\n");
      out.write("       <td align=\"center\"  width=\"70\">수량</td>\r\n");
      out.write("      <td align=\"center\"  width=\"80\">주문일</td>\r\n");
      out.write("      <td align=\"center\"  width=\"100\">결제계좌</td>\r\n");
      out.write("      <td align=\"center\"  width=\"30\">배송명</td>\r\n");
      out.write("      <td align=\"center\"  width=\"100\">배송지전화</td>\r\n");
      out.write("      <td align=\"center\"  width=\"30\">배송지우편주소</td>\r\n");
      out.write("      <td align=\"center\"  width=\"100\">배송지주소</td>\r\n");
      out.write("      <td align=\"center\"  width=\"50\">배송지상황</td>\r\n");
      out.write("   </tr>\r\n");

  for(int i=0;i<buyLists.size();i++){
    buyList = (BuyDataBean)buyLists.get(i);	     	 

      out.write("\r\n");
      out.write("    <tr> \r\n");
      out.write("      <td align=\"center\"  width=\"20\">");
      out.print(buyList.getBuy_id() );
      out.write("</td> \r\n");
      out.write("      <td align=\"center\"  width=\"20\">");
      out.print(buyList.getBuyer() );
      out.write("</td> \r\n");
      out.write("       <td align=\"center\"  width=\"130\">");
      out.print(buyList.getCampingitem_title() );
      out.write("</td>\r\n");
      out.write("      <td align=\"center\"  width=\"50\">");
      out.print(buyList.getBuy_price() );
      out.write("</td> \r\n");
      out.write("       <td align=\"center\"  width=\"70\">");
      out.print(buyList.getBuy_count());
      out.write("</td>\r\n");
      out.write("       <td align=\"center\"  width=\"80\">");
      out.print(buyList.getBuy_date().toString() );
      out.write("</td>\r\n");
      out.write("     <td align=\"center\"  width=\"100\">");
      out.print(buyList.getAccount() );
      out.write("</td>\r\n");
      out.write("        <td align=\"center\"  width=\"30\">");
      out.print(buyList.getDeliveryName() );
      out.write("</td>\r\n");
      out.write("      <td align=\"center\"  width=\"100\">");
      out.print(buyList.getDeliveryTel() );
      out.write("</td>\r\n");
      out.write("       <td align=\"center\"  width=\"30\">");
      out.print(buyList.getDeliveryAddressNum() );
      out.write("</td>\r\n");
      out.write("      <td align=\"center\"  width=\"100\">");
      out.print(buyList.getDeliveryAddress() );
      out.write("</td>\r\n");
      out.write("     <td align=\"center\"  width=\"50\">");
      out.print(buyList.getSanction() );
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
}
      out.write("\r\n");
      out.write("</table>\r\n");
}
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
