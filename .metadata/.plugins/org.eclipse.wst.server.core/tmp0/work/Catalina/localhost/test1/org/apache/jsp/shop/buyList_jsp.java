/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2020-02-06 08:13:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import libbean.BuyDataBean;
import libbean.BuyDBBean;
import java.util.List;
import java.text.NumberFormat;

public final class buyList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("libbean.BuyDataBean");
    _jspx_imports_classes.add("libbean.BuyDBBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  String buyer = (String)session.getAttribute("id");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>campingshop</title>\r\n");
      out.write("<link href=\"../sourceboot/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body align=\"center\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n");
      out.write("   <a class=\"navbar-brand\" href=\"shopMain.jsp\">캠핑</a>\r\n");
      out.write("  <button class=\"navbar-toggler collapsed\" aria-expanded=\"false\" aria-controls=\"navbarColor01\" aria-label=\"Toggle navigation\" type=\"button\" data-target=\"#navbarColor01\" data-toggle=\"collapse\">\r\n");
      out.write("    <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("  </button>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n");
      out.write("    <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("      <li class=\"nav-item active\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"../manager/logon/managerLoginForm.jsp\"> 관리자<span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item\">\r\n");
      out.write("       <a class=\"nav-link\" href=\"searchorder.jsp\">주문조회</a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item\">\r\n");
      out.write("       <a class=\"nav-link\" href=\"../boardfolder/list.jsp\">Q&A 문의</a>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>    \r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"text-right\">\r\n");
      out.write("<br>\r\n");
      out.write("  \t\t<b>");
      out.print(session.getAttribute("id"));
      out.write("</b>님 \r\n");
      out.write("  \t\t\t\r\n");
      out.write(" \t\t\r\n");
      out.write("\t   \t<input type=\"button\"  value=\"장바구니\"  onclick=\"javascript:window.location='../shop/cartList.jsp?clock_kind=all'\" class=\"btn btn-info\">\r\n");
      out.write("\t    <input type=\"button\"  value=\"주문내역\"  onclick=\"javascript:window.location='../shop/buyList.jsp'\" class=\"btn btn-danger\">\t   \r\n");
      out.write("\t    <input type=\"button\" value=\"로그아웃\"  onclick=\"javascript:window.location='../shop/logout.jsp'\" class=\"btn btn-dark\">\r\n");
      out.write("</div>\t    \r\n");
      out.write("\t    \r\n");
      out.write("\t    <br><br>\r\n");
      out.write("\t    \r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("\t  <a class=\"navbar-brand\" href=\"list.jsp?campingitem_kind=all\">ALL</a>\r\n");
      out.write("\t  <div class=\"collapse navbar-collapse\">\r\n");
      out.write("\t    <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("\t      <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=100\">  랜턴|버너 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t      <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=200\">  캠핑퍼니처 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t      <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=300\">  침낭|매트 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t      <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=400\">  텐트|천막 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t         <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=500\">  의류 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t         <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=600\">  신발 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t         <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=700\">  가방 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t        <li class=\"nav-item active\">\r\n");
      out.write("\t        <a class=\"nav-link\" href=\"list.jsp?campingitem_kind=800\">  주변도구 </a>\r\n");
      out.write("\t      </li>\r\n");
      out.write("\t    </ul>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t  \r\n");

List<BuyDataBean> buyLists = null;
BuyDataBean buyList = null;
int count = 0;
int number = 0;
int total = 0;
long compareId=0;
long preId=0;

if(session.getAttribute("id")==null){
   response.sendRedirect("shopMain.jsp");        
}else{
   BuyDBBean buyProcess = BuyDBBean.getInstance();
   count = buyProcess.getListCount(buyer);

   if(count == 0){

      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <table> \r\n");
      out.write("     <tr><td align=\"center\" >구매목록이 없습니다.</td> </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("      <input type=\"button\" value=\"메인으로\" \r\n");
      out.write("         onclick=\"javascript:window.location='shopMain.jsp'\">\r\n");

  }else{
    buyLists = buyProcess.getBuyList(buyer);

      out.write("\r\n");
      out.write("    <h3><b>주문목록</b></h3>\r\n");
      out.write("    <table><tr><td>\r\n");

    for(int i=0;i<buyLists.size();i++){
       buyList = buyLists.get(i);
    	 
       if(i<buyLists.size()-1){
    	  BuyDataBean compare = buyLists.get(i+1);
    	  compareId = compare.getBuy_id();
    		 
    	  BuyDataBean pre = buyLists.get(buyLists.size()-2);
    	  preId = pre.getBuy_id();
       }  	 

      out.write("\r\n");
      out.write("   <table> \r\n");
      out.write("      <tr> \r\n");
      out.write("        <td width=\"150\">No.(구매날짜)</td>\r\n");
      out.write("        <td width=\"300\">상품</td> \r\n");
      out.write("        <td width=\"100\">판매가격</td>\r\n");
      out.write("        <td width=\"50\">수량</td> \r\n");
      out.write("        <td width=\"150\">금액</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr> \r\n");
      out.write("        <td align=\"center\"  width=\"150\">");
      out.print(buyList.getBuy_id());
      out.write("</td> \r\n");
      out.write("        <td  width=\"300\" align=\"left\">\r\n");
      out.write("           <img src=\"../photofile/");
      out.print(buyList.getCampingitem_image());
      out.write("\" \r\n");
      out.write("               border=\"0\" width=\"30\" height=\"50\" align=\"middle\">\r\n");
      out.write("             ");
      out.print(buyList.getCampingitem_title());
      out.write("\r\n");
      out.write("        </td> \r\n");
      out.write("        <td width=\"100\">\\");
      out.print(NumberFormat.getInstance().format(buyList.getBuy_price()));
      out.write("</td>\r\n");
      out.write("        <td width=\"50\">");
      out.print(buyList.getBuy_count());
      out.write("</td> \r\n");
      out.write("        <td width=\"150\" >\r\n");
      out.write("           ");
total += buyList.getBuy_count()*buyList.getBuy_price();
      out.write("\r\n");
      out.write("           \\");
      out.print(NumberFormat.getInstance().format(buyList.getBuy_count()*buyList.getBuy_price()) );
      out.write("\r\n");
      out.write("       </td>\r\n");
      out.write("      </tr>\r\n");

    if( buyList.getBuy_id() != compareId || 
      (i == buyLists.size()-1) && preId != buyList.getBuy_id() ) {

      out.write(" \r\n");
      out.write("      <tr>\r\n");
      out.write("       <td colspan=\"5\" align=\"right\">\r\n");
      out.write("         <b>총 금액 : \\");
      out.print(NumberFormat.getInstance().format(total));
      out.write("</b></td>\r\n");
      out.write("      </tr></table>\r\n");
 
      compareId = buyList.getBuy_id();
       total = 0;
   }else{

      out.write("\r\n");
      out.write("   </td></tr></table><br>\r\n");

   }
 }

 }
}

      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t    <td width=\"180\" valign=\"center\" halign=\"center\">\r\n");
      out.write("\t\t\t    <img src=\"logo2.PNG\" border=\"0\" width=\"110\" height=\"110\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td width=\"700\" valign=\"top\">\r\n");
      out.write("\t\t        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "bottom.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t    </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
